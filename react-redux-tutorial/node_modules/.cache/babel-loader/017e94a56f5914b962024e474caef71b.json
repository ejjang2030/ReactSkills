{"ast":null,"code":"import { createAction } from 'redux-actions';\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\nconst INSERT = 'todos/INSERT';\nconst TOGGLE = 'todos/TOGGLE';\nconst REMOVE = 'todos/REMOVE';\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\nlet id = 3;\nexport const insert = text => ({\n  type: INSERT,\n  todo: {\n    id: id++,\n    text,\n    done: false\n  }\n});\nexport const toggle = id => ({\n  type: TOGGLE,\n  id\n});\nexport const remove = id => ({\n  type: REMOVE,\n  id\n});\nconst initialState = {\n  input: '',\n  todos: [{\n    id: 1,\n    text: '리덕스 기초 배우기',\n    done: true\n  }, {\n    id: 2,\n    text: '리액트와 리덕스 사용하기',\n    done: false\n  }]\n};\n\nfunction todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return { ...state,\n        input: action.input\n      };\n\n    case INSERT:\n      return { ...state,\n        todos: state.todos.concat(action.todo)\n      };\n\n    case TOGGLE:\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.id ? { ...todo,\n          done: !todo.done\n        } : todo)\n      };\n\n    case REMOVE:\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["D:/Programming/Study/ReactSkills/react-redux-tutorial/src/modules/todos.js"],"names":["createAction","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","changeInput","input","id","insert","text","type","todo","done","toggle","remove","initialState","todos","state","action","concat","map","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AAEA,OAAO,MAAMC,WAAW,GAAGL,YAAY,CAACC,YAAD,EAAeK,KAAK,IAAIA,KAAxB,CAAhC;AAEP,IAAIC,EAAE,GAAG,CAAT;AACA,OAAO,MAAMC,MAAM,GAAGC,IAAI,KAAK;AAC3BC,EAAAA,IAAI,EAAER,MADqB;AAE3BS,EAAAA,IAAI,EAAE;AACFJ,IAAAA,EAAE,EAAEA,EAAE,EADJ;AAEFE,IAAAA,IAFE;AAGFG,IAAAA,IAAI,EAAE;AAHJ;AAFqB,CAAL,CAAnB;AASP,OAAO,MAAMC,MAAM,GAAGN,EAAE,KAAK;AACzBG,EAAAA,IAAI,EAAEP,MADmB;AAEzBI,EAAAA;AAFyB,CAAL,CAAjB;AAKP,OAAO,MAAMO,MAAM,GAAGP,EAAE,KAAK;AACzBG,EAAAA,IAAI,EAAEN,MADmB;AAEzBG,EAAAA;AAFyB,CAAL,CAAjB;AAKP,MAAMQ,YAAY,GAAG;AACjBT,EAAAA,KAAK,EAAE,EADU;AAEjBU,EAAAA,KAAK,EAAE,CACH;AACIT,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,YAFV;AAGIG,IAAAA,IAAI,EAAE;AAHV,GADG,EAMH;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,eAFV;AAGIG,IAAAA,IAAI,EAAE;AAHV,GANG;AAFU,CAArB;;AAgBA,SAASI,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACzC,UAAOA,MAAM,CAACR,IAAd;AACI,SAAKT,YAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHX,QAAAA,KAAK,EAAEY,MAAM,CAACZ;AAFX,OAAP;;AAIJ,SAAKJ,MAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBD,MAAM,CAACP,IAA1B;AAFJ,OAAP;;AAIJ,SAAKR,MAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYI,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYW,MAAM,CAACX,EAAnB,GAAwB,EAAE,GAAGI,IAAL;AAAWC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAvB,SAAxB,GAAwDD,IAAhF;AAFJ,OAAP;;AAIJ,SAAKP,MAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYW,MAAM,CAACX,EAA9C;AAFJ,OAAP;;AAIJ;AACI,aAAOU,KAAP;AAtBR;AAwBH;;AAED,eAAeD,KAAf","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\r\nconst INSERT = 'todos/INSERT';\r\nconst TOGGLE = 'todos/TOGGLE';\r\nconst REMOVE = 'todos/REMOVE';\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\r\n\r\nlet id = 3;\r\nexport const insert = text => ({\r\n    type: INSERT,\r\n    todo: {\r\n        id: id++,\r\n        text,\r\n        done: false\r\n    }\r\n});\r\n\r\nexport const toggle = id => ({\r\n    type: TOGGLE,\r\n    id\r\n});\r\n\r\nexport const remove = id => ({\r\n    type: REMOVE,\r\n    id\r\n});\r\n\r\nconst initialState = {\r\n    input: '',\r\n    todos: [\r\n        {\r\n            id: 1,\r\n            text: '리덕스 기초 배우기',\r\n            done: true\r\n        },\r\n        {\r\n            id: 2,\r\n            text: '리액트와 리덕스 사용하기',\r\n            done: false\r\n        }\r\n    ]\r\n};\r\n\r\nfunction todos(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CHANGE_INPUT:\r\n            return {\r\n                ...state,\r\n                input: action.input\r\n            };\r\n        case INSERT:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat(action.todo)\r\n            };\r\n        case TOGGLE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo)\r\n            };\r\n        case REMOVE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todos;"]},"metadata":{},"sourceType":"module"}