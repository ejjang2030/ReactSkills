{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\nconst INSERT = 'todos/INSERT';\nconst TOGGLE = 'todos/TOGGLE';\nconst REMOVE = 'todos/REMOVE';\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\nlet id = 3;\nexport const insert = createAction(INSERT, text => ({\n  id: id++,\n  text,\n  done: false\n}));\nexport const toggle = createAction(TOGGLE, id => id);\nexport const remove = createAction(REMOVE, id => id);\nconst initialState = {\n  input: '',\n  todos: [{\n    id: 1,\n    text: '리덕스 기초 배우기',\n    done: true\n  }, {\n    id: 2,\n    text: '리액트와 리덕스 사용하기',\n    done: false\n  }]\n};\nconst todos = handleActions({\n  [CHANGE_INPUT]: (state, action) => ({ ...state,\n    input: action.payload\n  }),\n  [INSERT]: (state, action) => ({ ...state,\n    todos: state.todos.concat(action.payload)\n  }),\n  [TOGGLE]: (state, action) => ({ ...state,\n    todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n      done: !todo.done\n    } : todo)\n  }),\n  [REMOVE]: (state, action) => ({ ...state,\n    todos: state.todos.filter(todo => todo.id !== action.payload)\n  })\n}, initialState);\nexport default todos;","map":{"version":3,"sources":["D:/Programming/Study/ReactSkills/react-redux-tutorial/src/modules/todos.js"],"names":["createAction","handleActions","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","changeInput","input","id","insert","text","done","toggle","remove","initialState","todos","state","action","payload","concat","map","todo","filter"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AAEA,OAAO,MAAMC,WAAW,GAAGN,YAAY,CAACE,YAAD,EAAeK,KAAK,IAAIA,KAAxB,CAAhC;AAEP,IAAIC,EAAE,GAAG,CAAT;AACA,OAAO,MAAMC,MAAM,GAAGT,YAAY,CAACG,MAAD,EAASO,IAAI,KAAK;AAChDF,EAAAA,EAAE,EAAEA,EAAE,EAD0C;AAEhDE,EAAAA,IAFgD;AAGhDC,EAAAA,IAAI,EAAE;AAH0C,CAAL,CAAb,CAA3B;AAMP,OAAO,MAAMC,MAAM,GAAGZ,YAAY,CAACI,MAAD,EAASI,EAAE,IAAIA,EAAf,CAA3B;AACP,OAAO,MAAMK,MAAM,GAAGb,YAAY,CAACK,MAAD,EAASG,EAAE,IAAIA,EAAf,CAA3B;AAEP,MAAMM,YAAY,GAAG;AACjBP,EAAAA,KAAK,EAAE,EADU;AAEjBQ,EAAAA,KAAK,EAAE,CACH;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADG,EAMH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANG;AAFU,CAArB;AAgBA,MAAMI,KAAK,GAAGd,aAAa,CACvB;AACI,GAACC,YAAD,GAAgB,CAACc,KAAD,EAAQC,MAAR,MAAoB,EAAE,GAAGD,KAAL;AAAYT,IAAAA,KAAK,EAAEU,MAAM,CAACC;AAA1B,GAApB,CADpB;AAEI,GAACf,MAAD,GAAU,CAACa,KAAD,EAAQC,MAAR,MAAoB,EAC1B,GAAGD,KADuB;AAE1BD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYI,MAAZ,CAAmBF,MAAM,CAACC,OAA1B;AAFmB,GAApB,CAFd;AAMI,GAACd,MAAD,GAAU,CAACY,KAAD,EAAQC,MAAR,MAAoB,EAC1B,GAAGD,KADuB;AAE1BD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAgBC,IAAI,IACvBA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACC,OAAnB,GAA6B,EAAE,GAAGG,IAAL;AAAWV,MAAAA,IAAI,EAAE,CAACU,IAAI,CAACV;AAAvB,KAA7B,GAA6DU,IAD1D;AAFmB,GAApB,CANd;AAYI,GAAChB,MAAD,GAAU,CAACW,KAAD,EAAQC,MAAR,MAAoB,EAC1B,GAAGD,KADuB;AAE1BD,IAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYO,MAAZ,CAAmBD,IAAI,IAAIA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACC,OAA9C;AAFmB,GAApB;AAZd,CADuB,EAkBvBJ,YAlBuB,CAA3B;AAqBA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\r\nconst INSERT = 'todos/INSERT';\r\nconst TOGGLE = 'todos/TOGGLE';\r\nconst REMOVE = 'todos/REMOVE';\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\r\n\r\nlet id = 3;\r\nexport const insert = createAction(INSERT, text => ({\r\n    id: id++,\r\n    text,\r\n    done: false,\r\n}));\r\n\r\nexport const toggle = createAction(TOGGLE, id => id);\r\nexport const remove = createAction(REMOVE, id => id);\r\n\r\nconst initialState = {\r\n    input: '',\r\n    todos: [\r\n        {\r\n            id: 1,\r\n            text: '리덕스 기초 배우기',\r\n            done: true\r\n        },\r\n        {\r\n            id: 2,\r\n            text: '리액트와 리덕스 사용하기',\r\n            done: false\r\n        }\r\n    ]\r\n};\r\n\r\nconst todos = handleActions( \r\n    {\r\n        [CHANGE_INPUT]: (state, action) => ({ ...state, input: action.payload }),\r\n        [INSERT]: (state, action) => ({\r\n            ...state,\r\n            todos: state.todos.concat(action.payload),\r\n        }),\r\n        [TOGGLE]: (state, action) => ({\r\n            ...state,\r\n            todos: state.todos.map(todo =>\r\n                todo.id === action.payload ? { ...todo, done: !todo.done } : todo,\r\n            ),\r\n        }),\r\n        [REMOVE]: (state, action) => ({\r\n            ...state,\r\n            todos: state.todos.filter(todo => todo.id !== action.payload),\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default todos;"]},"metadata":{},"sourceType":"module"}