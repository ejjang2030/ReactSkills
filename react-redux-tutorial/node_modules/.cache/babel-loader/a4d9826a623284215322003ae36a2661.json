{"ast":null,"code":"import { createAction } from 'redux-actions';\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\nconst INSERT = 'todos/INSERT';\nconst TOGGLE = 'todos/TOGGLE';\nconst REMOVE = 'todos/REMOVE';\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\nlet id = 3;\nexport const insert = createAction(INSERT, text => ({\n  id: id++,\n  text,\n  done: false\n}));\nexport const toggle = id => ({\n  type: TOGGLE,\n  id\n});\nexport const remove = id => ({\n  type: REMOVE,\n  id\n});\nconst initialState = {\n  input: '',\n  todos: [{\n    id: 1,\n    text: '리덕스 기초 배우기',\n    done: true\n  }, {\n    id: 2,\n    text: '리액트와 리덕스 사용하기',\n    done: false\n  }]\n};\n\nfunction todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return { ...state,\n        input: action.input\n      };\n\n    case INSERT:\n      return { ...state,\n        todos: state.todos.concat(action.todo)\n      };\n\n    case TOGGLE:\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.id ? { ...todo,\n          done: !todo.done\n        } : todo)\n      };\n\n    case REMOVE:\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["D:/Programming/Study/ReactSkills/react-redux-tutorial/src/modules/todos.js"],"names":["createAction","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","changeInput","input","id","insert","text","done","toggle","type","remove","initialState","todos","state","action","concat","todo","map","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf;AAEA,OAAO,MAAMC,WAAW,GAAGL,YAAY,CAACC,YAAD,EAAeK,KAAK,IAAIA,KAAxB,CAAhC;AAEP,IAAIC,EAAE,GAAG,CAAT;AACA,OAAO,MAAMC,MAAM,GAAGR,YAAY,CAACE,MAAD,EAASO,IAAI,KAAK;AAChDF,EAAAA,EAAE,EAAEA,EAAE,EAD0C;AAEhDE,EAAAA,IAFgD;AAGhDC,EAAAA,IAAI,EAAE;AAH0C,CAAL,CAAb,CAA3B;AAMP,OAAO,MAAMC,MAAM,GAAGJ,EAAE,KAAK;AACzBK,EAAAA,IAAI,EAAET,MADmB;AAEzBI,EAAAA;AAFyB,CAAL,CAAjB;AAKP,OAAO,MAAMM,MAAM,GAAGN,EAAE,KAAK;AACzBK,EAAAA,IAAI,EAAER,MADmB;AAEzBG,EAAAA;AAFyB,CAAL,CAAjB;AAKP,MAAMO,YAAY,GAAG;AACjBR,EAAAA,KAAK,EAAE,EADU;AAEjBS,EAAAA,KAAK,EAAE,CACH;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADG,EAMH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANG;AAFU,CAArB;;AAgBA,SAASK,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACzC,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKX,YAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHV,QAAAA,KAAK,EAAEW,MAAM,CAACX;AAFX,OAAP;;AAIJ,SAAKJ,MAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBD,MAAM,CAACE,IAA1B;AAFJ,OAAP;;AAIJ,SAAKhB,MAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAgBD,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYU,MAAM,CAACV,EAAnB,GAAwB,EAAE,GAAGY,IAAL;AAAWT,UAAAA,IAAI,EAAE,CAACS,IAAI,CAACT;AAAvB,SAAxB,GAAwDS,IAAhF;AAFJ,OAAP;;AAIJ,SAAKf,MAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYM,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYU,MAAM,CAACV,EAA9C;AAFJ,OAAP;;AAIJ;AACI,aAAOS,KAAP;AAtBR;AAwBH;;AAED,eAAeD,KAAf","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\r\nconst INSERT = 'todos/INSERT';\r\nconst TOGGLE = 'todos/TOGGLE';\r\nconst REMOVE = 'todos/REMOVE';\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT, input => input);\r\n\r\nlet id = 3;\r\nexport const insert = createAction(INSERT, text => ({\r\n    id: id++,\r\n    text,\r\n    done: false,\r\n}));\r\n\r\nexport const toggle = id => ({\r\n    type: TOGGLE,\r\n    id\r\n});\r\n\r\nexport const remove = id => ({\r\n    type: REMOVE,\r\n    id\r\n});\r\n\r\nconst initialState = {\r\n    input: '',\r\n    todos: [\r\n        {\r\n            id: 1,\r\n            text: '리덕스 기초 배우기',\r\n            done: true\r\n        },\r\n        {\r\n            id: 2,\r\n            text: '리액트와 리덕스 사용하기',\r\n            done: false\r\n        }\r\n    ]\r\n};\r\n\r\nfunction todos(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CHANGE_INPUT:\r\n            return {\r\n                ...state,\r\n                input: action.input\r\n            };\r\n        case INSERT:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat(action.todo)\r\n            };\r\n        case TOGGLE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo)\r\n            };\r\n        case REMOVE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todos;"]},"metadata":{},"sourceType":"module"}